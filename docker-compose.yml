version: '3.7'

services:

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    restart: always

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    restart: always

  spark-master:
    container_name: spark-master
    hostname: spark-master
    image: magiplatform/spark:spark-3.1.2
    entrypoint: /opt/app/bin/master.sh
    environment:
      SPARK_NUM_EXECUTORS: 2
      SPARK_MASTER_HOST: spark-master
      SPARK_DRIVER_MEMORY: 4g
      SPARK_EXECUTOR_MEMORY: 4g
      SPARK_NETWORK_TIMEOUT: 10000
      ARANGO_HOST: arangodb
    ports:
      - "7077:7077"
      - "8080:8080"
      - "6066:6066"
    volumes:
      - ./scripts:/opt/app/scripts
      - ./target/scala-2.12/dart-spark-odinson-assembly-0.1.0-SNAPSHOT.jar:/opt/spark/jars/app.jar
    networks:
      - spark
    depends_on:
      - kafka

  spark-worker-1:
    container_name: spark-worker-1
    hostname: spark-worker-1
    image: magiplatform/spark:spark-3.1.2
    entrypoint: /opt/app/bin/worker.sh
    environment:
      SPARK_NUM_EXECUTORS: 2
      SPARK_DRIVER_MEMORY: 4g
      SPARK_EXECUTOR_MEMORY: 4g
      SPARK_NETWORK_TIMEOUT: 10000
    ports:
      - "7078:7078"
      - "8081:8081"
    volumes:
      - ./target/scala-2.12/dart-spark-odinson-assembly-0.1.0-SNAPSHOT.jar:/opt/spark/jars/app.jar
    depends_on:
      - spark-master
    networks:
      - spark

  console:
    image: docker.causeex.com/dart/centos-jdk:jdk8
    entrypoint: tail -f /dev/null
    networks:
      - spark

  #  arangodb:
  #    image: docker.causeex.com/dart/dart-arangodb:latest
  #    hostname: arangodb
  #    ports:
  #      - 8529:8529
  #      - 8530:8530
  #    networks:
  #      - spark

  #  minio:
  #    image: quay.io/minio/minio:latest
  #    entrypoint: "minio server start --console-address :9002"
  #    hostname: minio
  #    ports:
  #      - 9002:9002
  #      - 9001:9001
  #      - 9000:9000
  #    networks:
  #      - spark

  #  minio-mc-sidecar:
  #    image: minio/mc:latest
  #    entrypoint: >
  #      /bin/sh -c 'sleep 5; mc alias set dart http://minio:9000 minioadmin minioadmin; mc mb dart/test;'
  #    hostname: minio-mc-sidecar
  #    networks:
  #      - spark

networks:
  spark:
